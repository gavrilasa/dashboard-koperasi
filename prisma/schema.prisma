generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AccountStatus {
  ACTIVE
  INACTIVE
}

enum Gender {
  MALE
  FEMALE
}

model Customer {
  id        String   @id @default(cuid())
  name      String
  idNumber  String   @unique
  address   String
  phone     String
  gender    Gender
  birthDate DateTime

  accountNumber String        @unique
  balance       Decimal       @db.Decimal(15, 2)
  status        AccountStatus @default(ACTIVE)

  transactions Transaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id         String   @id @default(cuid())
  customerId String
  customer   Customer @relation(fields: [customerId], references: [id])

  amount      Decimal @db.Decimal(15, 2)
  type        String
  description String
  notes       String?

  createdAt   DateTime     @default(now())
  attachments Attachment[]
}

model IdempotencyKey {
  id        String   @id
  createdAt DateTime @default(now())
}

model Attachment {
  id            String      @id @default(cuid())
  transactionId String
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  filePath      String
  mimeType      String
  size          Int
  createdAt     DateTime    @default(now())
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?

  sessions Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model MainAccount {
  id      String  @id @default(cuid())
  name    String  @unique // Contoh: "Kas Operasional Koperasi"
  balance Decimal @db.Decimal(15, 2)

  transactions MainAccountTransaction[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Model untuk Riwayat Transaksi Rekening Induk
model MainAccountTransaction {
  id            String      @id @default(cuid())
  mainAccountId String
  account       MainAccount @relation(fields: [mainAccountId], references: [id])

  amount      Decimal  @db.Decimal(15, 2)
  type        String // "KREDIT" (Top Up) atau "DEBIT" (Tarik)
  description String // Contoh: "Setoran Modal Awal", "Penarikan Biaya Operasional"
  notes       String?
  createdAt   DateTime @default(now())
}
